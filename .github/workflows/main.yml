name: CI

on:
  pull_request:
  push:
    branches:
      - develop

jobs:
  pre-commit:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.0

  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        w90-binary-parallel: ["false", "true"]
    name: Build and test `parallel=${{ matrix.w90-binary-parallel }}`
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install  \
            gfortran            \
            libblas-dev         \
            liblapack-dev       \
            openmpi-bin         \
            libopenmpi-dev
          pip install --upgrade pip
          pip install   \
            numpy       \
            matplotlib  \
      - name: build
        env:
          W90BINARYPARALLEL: ${{ matrix.w90-binary-parallel }}
        run: |
          if [ "$W90BINARYPARALLEL" == "true" ] ; then
            cp ./.github/workflows/config/make.inc.gfort+openmpi ./make.inc
          else
            cp ./.github/workflows/config/make.inc.gfort ./make.inc
          fi
          #make -j default w90chk2chk libs
          make all
      - name: run tests
        env:
          W90BINARYPARALLEL: ${{ matrix.w90-binary-parallel }}
        run: |
          ./.github/workflows/run_tests.sh
      - name: compute coverage
        uses: codecov/codecov-action@v1
      - name: archive test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results_parallel=${{ matrix.w90-binary-parallel }}
          path: |
            test-suite/tests/test*/test.err*
            test-suite/tests/test*/test.out*

  docs:
    name: Validate mkdocs links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          # use the latest stable version
          python-version: "3.x"
          cache: "pip"
      # `pybtex` uses `pkg_resources` which is deprecated. Use workaround until upstream `mkdocs_bibtext`decides on a solution
      # https://github.com/shyamd/mkdocs-bibtex/issues/228
      # https://bitbucket.org/pybtex-devs/pybtex/issues/169/replace-pkg_resources-with
      - run: pip install -r docs/requirements.txt setuptools
      - run: mkdocs build --strict
        working-directory: ./docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_MKDOCS_GIT_COMMITTERS: False
